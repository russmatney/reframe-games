#+TITLE: Reframe Games

Games built in ClojureScript, with [[https://github.com/reagent-project/reagent][Reagent]], [[https://github.com/day8/re-frame][Re-frame]], [[https://github.com/thheller/shadow-cljs][Shadow-cljs]], and
[[https://github.com/nostalgic-css/NES.css][NES.css]].

This repo will be expanded to include other games, but for now, it's just a
Tetris clone. Check out the live game at [[https://russmatney.itch.io/tetruss][russmatney.itch.io/tetruss]].

* Release
** Building the release
#+BEGIN_SRC sh
# remove 'complied' dir from dev-mode
rm -rf public/js/compiled

# build release version
shadow-cljs release app
#+END_SRC
** Deploying to s3
#+BEGIN_SRC sh
# deploy to s3
aws s3 sync public/ s3://games.russmatney.com
#+END_SRC

**** Requires aws cli tool:
#+BEGIN_SRC zsh
yay -S aws-cli

# setup creds
aws configure
#+END_SRC

** Packaging for itch.io
Itch.io requires a .zip of the web-app.

Build as described above, then zip it up.

#+BEGIN_SRC sh
zip -r reframe-games.zip public
#+END_SRC
* misc todos
**** [X] move entrypoints into grids
**** [X] clean up 'widget' api
**** [X] dry up views into grid/views namespace
**** [X] break build process apart to support multiple apps
**** [X] dry up timers and pause helpers
**** [X] refactor colors into view, rather than attached to cells
**** [X] locked-falls should be instant-falls
**** [X] manual-down should be instant-down
**** [X] puyo removes extra pieces on group-breaks
**** [X] controls fire multiple events (from different sources)
**** [X] unify cell color 'type' treatment
**** [X] input controls to both games on select page
**** [X] instant-fall feature
**** [X] faster tick-timeout while locked falls are happening
**** [X] create playble game in the menus as the game itself
**** [X] send multiple controls events per each - allow for multi-register
just overwrite for now? or fire both controls? both i think?
make it easy to register/deregister them.
**** [X] controls: instant-drop
**** [ ] timers broken
**** [ ] dry up controls and game-db events
**** [ ] display directional controls more prominently
redo controls view, maybe just show when paused
**** [ ] dry up @rf/subscribe usage with suggested subscribe macro
`(<-sub! ::s/current-page])`?
**** [ ] control registration/deregistration
**** [ ] show/learn controls overlay
no keys detected yet overlay with suggestions for clicking?
**** [ ] pause overlay
**** [ ] support optional url navigation? (back button?)
**** [ ] select game with keyboard movement controls
**** [ ] incorporate spin feature
**** [ ] show combo chains and rows-to-next-level
**** [ ] mobile touch/gesture support
**** [ ] customizable controls
**** [ ] configurable pieces and board size
**** [ ] high-score, custom controls preserved across re-fresh
**** [ ] rows-to-next-level visual indication
**** [ ] rotate in two directions
**** [ ] show 'ghost' piece (for fast drop)
**** [ ] mobile detection and 'alert'?
**** [ ] pause doesn't always stop the clock?
**** [ ] add a robot to make moves when no one has for a while
something for leaving it on
**** [ ] add garden/stylesheets
https://github.com/lambdaisland/garden-watcher
**** [ ] make get-cell warning optional
** ideas
**** [ ] battle with AI
**** [ ] rotation styles on rows
**** [ ] bullet mode: size-3 pieces, 10x speed
**** [ ] draw your own piece
**** [ ] build up a puzzle/art piece
**** [ ] record and show replay/highlights
**** [ ] shared high-score + leaderboard
**** [ ] bonus for clearing the screen completely
**** [ ] comments for holding same-piece type
**** [ ] 'doom' face - show emotion during left/right/rotate/score
**** [ ] Add achievements
**** [ ] poster-ized level clears (gunn style)
***** include current game state metadata
**** [ ] display character commentary per piece played
**** [ ] Write a metadata component
include: current combo, highest combo, combos to next level, highest level
pieces played, combos scored, items available
* Resources
** Tetris
The [[https://tetris.wiki][Tetris Wiki]] has some great Tetris related resources.
* Contributing
My intention for this repository is to build some things from scratch on my
own - selfishly, I'm somewhat closed-minded to contributions.

I'm open to talking about the things in here via PRs and Issues, and I encourage
you to fork and do what you want with the code!

My motivation for developing this in the public:
- to share the code as an example
- to get feedback
- (hopefully) to inspire others to build things!
